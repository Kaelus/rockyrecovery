/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is used by the application.
    implementation libs.guava

    // This app specific
    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    implementation group: 'org.foundationdb', name: 'fdb-java', version: '5.2.5'
    implementation group: 'org.hdrhistogram', name: 'HdrHistogram', version: '1.2.1'
    implementation group: 'com.github.spullara.cli-parser', name: 'cli-parser', version: '1.1.2'
    implementation group: 'io.netty', name: 'netty-all', version: '4.0.23.Final'
    implementation group: 'com.google.guava', name: 'failureaccess', version: '1.0.1'
    implementation group: 'com.google.guava', name: 'listenablefuture', version: '9999.0-empty-to-avoid-conflict-with-guava'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    implementation group: 'org.checkerframework', name: 'checker-qual', version: '2.11.1'
    implementation group: 'com.google.errorprone', name: 'error_prone_annotations', version: '2.3.4'
    implementation group: 'com.google.j2objc', name: 'j2objc-annotations', version: '1.3'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.842'
    implementation group: 'org.iq80.leveldb', name: 'leveldb', version: '0.12'
    implementation group: 'org.fusesource.leveldbjni', name: 'leveldbjni-all', version: '1.8'
    implementation group: 'org.apache.xmlrpc', name: 'xmlrpc-client', version: '3.1.3'
    implementation group: 'org.apache.xmlrpc', name: 'xmlrpc-server', version: '3.1.3'
    implementation group: 'org.apache.xmlrpc', name: 'xmlrpc-common', version: '3.1.3'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'	
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
     zip64 true
     duplicatesStrategy = DuplicatesStrategy.EXCLUDE
     group = 'rockyrecovery'
         description = 'rockyrecovery fatJar build task'
     manifest {
              attributes 'Implementation-Title': 'Gradle Jar File Example',
                         'Implementation-Version': version,
                         'Main-Class': 'rockyrecovery.RecoveryApp'
     }
     //baseName = project.name + '-all'
     archiveBaseName = project.name + '-all'
     from {
          //configurations.compile.collect {
          configurations.compileClasspath.collect {
                                         it.isDirectory() ? it : zipTree(it)
                                         }
        }
     with jar
}

application {
    // Define the main class for the application.
    mainClass = 'rockyrecovery.RecoveryApp'
}
